import{_ as r,r as p,o as i,a as l,b as e,d as n,w as t,F as c,c as o,e as s}from"./app.7201ef71.js";var u="/images/hero.png";const d={},h=o(`<h1 id="assets" tabindex="-1"><a class="header-anchor" href="#assets" aria-hidden="true">#</a> Assets</h1><h2 id="relative-urls" tabindex="-1"><a class="header-anchor" href="#relative-urls" aria-hidden="true">#</a> Relative URLs</h2><p>You can reference any assets using relative URLs in your Markdown content:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">An image</span>](<span class="token url">./image.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This is generally the suggested way to import images, as users usually place images near the Markdown file that references them.</p><h2 id="public-files" tabindex="-1"><a class="header-anchor" href="#public-files" aria-hidden="true">#</a> Public Files</h2><p>You can put some static assets inside public directory, and they will be copied to the root of the generated directory.</p><p>The default public directory is <code>.vuepress/public</code>, which can be changed in config.</p><p>It would be useful in some cases:</p><ul><li>You may need to provide static assets that are not directly referenced in any of your Markdown files, for example, favicon and PWA icons.</li><li>You may need to serve some shared static assets, which may even be referenced outside your site, for example, logo images.</li><li>You may want to reference images using absolute URLs in your Markdown content.</li></ul><p>Take our documentation source files as an example, we are putting the logo of VuePress inside the public directory:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u2514\u2500 docs
   \u251C\u2500 .vuepress
   <span class="token operator">|</span>  \u2514\u2500 public
   <span class="token operator">|</span>     \u2514\u2500 images
   <span class="token operator">|</span>        \u2514\u2500 hero.png  <span class="token comment"># &lt;- Logo file</span>
   \u2514\u2500 guide
      \u2514\u2500 assets.md       <span class="token comment"># &lt;- Here we are</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>We can reference our logo in current page like this:</p><p><strong>Input</strong></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">VuePress Logo</span>](<span class="token url">/images/hero.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Output</strong></p><p><img src="`+u+'" alt="VuePress Logo"></p>',17),m={class:"custom-container tip"},g=e("p",{class:"custom-container-title"},"\u63D0\u793A",-1),b=s("Config reference: "),k=s("public"),f=e("h3",{id:"base-helper",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#base-helper","aria-hidden":"true"},"#"),s(" Base Helper")],-1),_=s("If your site is deployed to a non-root URL, i.e. the "),v=s("base"),y=s(" is not "),w=e("code",null,'"/"',-1),x=s(", you will need to prepend the "),L=e("code",null,"base",-1),P=s(" to the absolute URLs of your public files."),V=o(`<p>For example, if you plan to deploy your site to <code>https://foo.github.io/bar/</code>, then <code>base</code> should be set to <code>&quot;/bar/&quot;</code>, and you have to reference your public files in Markdown like this:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">VuePress Logo</span>](<span class="token url">/bar/images/hero.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Obviously, it is brittle if you ever decide to change the <code>base</code>. This is the reason why we suggest to reference static assets using relative URLs.</p><p>To help with that, VuePress provides a built-in helper <code>$withBase</code> that generates the correct path:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$withBase(<span class="token punctuation">&#39;</span>/images/hero.png<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VuePress Logo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The helper is verbose in Markdown. So it might be more helpful for theme and plugin authors.</p>`,6),R={class:"custom-container tip"},q=e("p",{class:"custom-container-title"},"\u63D0\u793A",-1),T=s("Config reference: "),B=s("base"),M=o(`<h2 id="packages-and-path-aliases" tabindex="-1"><a class="header-anchor" href="#packages-and-path-aliases" aria-hidden="true">#</a> Packages and Path Aliases</h2><p>Although it is not a common usage, you can reference images from dependent packages:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -D package-name
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">Image from dependency</span>](<span class="token url">package-name/image.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>The path aliases that set in config file are also supported:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;@alias&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/some/dir&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">Image from path alias</span>](<span class="token url">@alias/image.png</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,7),U={class:"custom-container tip"},A=e("p",{class:"custom-container-title"},"\u63D0\u793A",-1),C=s("Config reference: "),I=s("alias");function Y(F,N){const a=p("RouterLink");return i(),l(c,null,[h,e("div",m,[g,e("p",null,[b,n(a,{to:"/reference/config.html#public"},{default:t(()=>[k]),_:1})])]),f,e("p",null,[_,n(a,{to:"/reference/config.html#base"},{default:t(()=>[v]),_:1}),y,w,x,L,P]),V,e("div",R,[q,e("p",null,[T,n(a,{to:"/reference/config.html#base"},{default:t(()=>[B]),_:1})])]),M,e("div",U,[A,e("p",null,[C,n(a,{to:"/reference/config.html#alias"},{default:t(()=>[I]),_:1})])])],64)}var H=r(d,[["render",Y],["__file","assets.html.vue"]]);export{H as default};
