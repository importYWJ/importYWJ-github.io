import{_ as i,r as d,o as c,a as l,b as t,d as n,w as s,F as h,c as a,e}from"./app.7201ef71.js";const u={},p=a(`<h1 id="page" tabindex="-1"><a class="header-anchor" href="#page" aria-hidden="true">#</a> Page</h1><p>VuePress is markdown-centered. Each markdown file inside your project is a standalone page.</p><h2 id="routing" tabindex="-1"><a class="header-anchor" href="#routing" aria-hidden="true">#</a> Routing</h2><p>By default, the route path of a page is determined by the relative path of your markdown file.</p><p>Assuming this is the directory structure of your markdown files:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u2514\u2500 docs
   \u251C\u2500 guide
   \u2502  \u251C\u2500 getting-started.md
   \u2502  \u2514\u2500 README.md
   \u251C\u2500 contributing.md
   \u2514\u2500 README.md
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,6),_=e("Take the "),m=t("code",null,"docs",-1),f=e(" directory as your "),g=e("sourceDir"),b=e(", e.g. you are running "),k=t("code",null,"vuepress dev docs",-1),w=e(" command. Then the route paths of your markdown files would be:"),y=a('<table><thead><tr><th>Relative Path</th><th>Route Path</th></tr></thead><tbody><tr><td><code>/README.md</code></td><td><code>/</code></td></tr><tr><td><code>/contributing.md</code></td><td><code>/contributing.html</code></td></tr><tr><td><code>/guide/README.md</code></td><td><code>/guide/</code></td></tr><tr><td><code>/guide/page.md</code></td><td><code>/guide/page.html</code></td></tr></tbody></table><h2 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter" aria-hidden="true">#</a> Frontmatter</h2>',2),x=e("A markdown file could contain a "),v={href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"},M=e("YAML"),E=e(" frontmatter. The frontmatter must be at the top of the Markdown file and must be wrapped with a couple of triple-dashed lines. Here is a basic example:"),R=a(`<div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token punctuation">-</span>US
<span class="token key atrule">title</span><span class="token punctuation">:</span> Title of this page
<span class="token key atrule">description</span><span class="token punctuation">:</span> Description of this page</span>
<span class="token punctuation">---</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,1),V=e("You must have noticed that those fields are similar with the "),T=e("Site Config"),A=e(" in the "),C=e("Config File"),P=e(". You can override "),D=t("code",null,"lang",-1),F=e(", "),L=t("code",null,"title",-1),N=e(", "),S=t("code",null,"description",-1),B=e(", etc., of current page via frontmatter. So you can take frontmatter as page scope config."),H=t("p",null,"Also, VuePress has built-in support for some frontmatter fields, and your theme may have its own special frontmatter, too.",-1),Y={class:"custom-container tip"},I=t("p",{class:"custom-container-title"},"\u63D0\u793A",-1),j=e("Check out the "),U=e("Frontmatter Reference"),W=e(" for a full list of VuePress built-in frontmatter."),q=e("Check out the "),z=e("Default Theme > Frontmatter Reference"),G=e(" for the frontmatter of default theme."),J=t("h2",{id:"content",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#content","aria-hidden":"true"},"#"),e(" Content")],-1),K=t("p",null,[e("The main content of your page is written in Markdown. VuePress will firstly transform your Markdown to HTML code, then treat the HTML code as "),t("code",null,"<template>"),e(" of Vue SFC.")],-1),O=e("With the power of "),Q={href:"https://github.com/markdown-it/markdown-it",target:"_blank",rel:"noopener noreferrer"},X=e("markdown-it"),Z=e(" and Vue template syntax, the basic Markdown can be extended a lot. Next, check out the "),$=e("Markdown"),ee=e(" guide for all the extensions of Markdown in VuePress.");function te(ne,oe){const o=d("RouterLink"),r=d("ExternalLinkIcon");return c(),l(h,null,[p,t("p",null,[_,m,f,n(o,{to:"/reference/cli.html"},{default:s(()=>[g]),_:1}),b,k,w]),y,t("p",null,[x,t("a",v,[M,n(r)]),E]),R,t("p",null,[V,n(o,{to:"/guide/configuration.html#site-config"},{default:s(()=>[T]),_:1}),A,n(o,{to:"/guide/configuration.html#config-file"},{default:s(()=>[C]),_:1}),P,D,F,L,N,S,B]),H,t("div",Y,[I,t("p",null,[j,n(o,{to:"/reference/frontmatter.html"},{default:s(()=>[U]),_:1}),W]),t("p",null,[q,n(o,{to:"/reference/default-theme/frontmatter.html"},{default:s(()=>[z]),_:1}),G])]),J,K,t("p",null,[O,t("a",Q,[X,n(r)]),Z,n(o,{to:"/guide/markdown.html"},{default:s(()=>[$]),_:1}),ee])],64)}var ae=i(u,[["render",te],["__file","page.html.vue"]]);export{ae as default};
