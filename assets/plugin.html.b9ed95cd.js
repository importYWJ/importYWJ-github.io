import{_ as c,r as p,o as l,a as u,b as s,d as e,w as a,F as r,e as n,c as i}from"./app.7201ef71.js";const d={},h=s("h1",{id:"plugin",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#plugin","aria-hidden":"true"},"#"),n(" Plugin")],-1),_=n("With the help of "),g=n("Plugin API"),m=n(", VuePress plugin can provide different features for you."),f=s("h2",{id:"community-plugin",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#community-plugin","aria-hidden":"true"},"#"),n(" Community Plugin")],-1),b=n("Community users have created lots of plugins and published them to "),k={href:"https://www.npmjs.com/search?q=keywords:vuepress-plugin",target:"_blank",rel:"noopener noreferrer"},v=n("NPM"),y=n(". VuePress team also maintains some official plugins under the "),w={href:"https://www.npmjs.com/search?q=%40vuepress%20keywords%3Aplugin",target:"_blank",rel:"noopener noreferrer"},x=n("@vuepress"),P=n(" scope. You should check the plugin's own documentation for detailed guide."),j=n("In general, you need to specify the name of the plugin to use in "),I=n("plugins"),N=n(" option:"),V=i(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* options */</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>You can use either plugin name or its shorthand:</p><table><thead><tr><th>Plugin Name</th><th>Shorthand</th></tr></thead><tbody><tr><td><code>vuepress-plugin-foo</code></td><td><code>foo</code></td></tr><tr><td><code>@org/vuepress-plugin-bar</code></td><td><code>@org/bar</code></td></tr><tr><td><code>@vuepress/plugin-foobar</code></td><td><code>@vuepress/foobar</code></td></tr></tbody></table>`,3),C={class:"custom-container tip"},L=s("p",{class:"custom-container-title"},"\u63D0\u793A",-1),q=s("p",null,"Most plugins can only be used once. If the same plugin is used multiple times, only the last one will take effect.",-1),A=n("However, some plugins can be used multiple times (e.g. "),B=n("@vuepress/plugin-container"),E=n("), and you should check the documentation of the plugin itself for detailed guide."),F=s("h2",{id:"local-plugin",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#local-plugin","aria-hidden":"true"},"#"),n(" Local Plugin")],-1),Y=s("p",null,"If you want to use your own plugin but don't want to publish it, you can create a local plugin.",-1),M=n("It is recommended to use the "),R=n("Config File"),S=n(" directly as a plugin, because "),W=n("almost all of the Plugin APIs are available"),H=n(", which would be more convenient in most cases."),T=i(`<p>But if you have too many things to do in your config file, it&#39;s better to extract them into separate plugins, and use them by setting the absolute path to them or requiring them:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./path/to/your-plugin.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./another-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,2),z=n("You can refer to "),D=n("Advanced > Writing a Plugin"),G=n(" for how to write your own plugin.");function J(K,O){const t=p("RouterLink"),o=p("ExternalLinkIcon");return l(),u(r,null,[h,s("p",null,[_,e(t,{to:"/reference/plugin-api.html"},{default:a(()=>[g]),_:1}),m]),f,s("p",null,[b,s("a",k,[v,e(o)]),y,s("a",w,[x,e(o)]),P]),s("p",null,[j,e(t,{to:"/reference/config.html#plugins"},{default:a(()=>[I]),_:1}),N]),V,s("div",C,[L,q,s("p",null,[A,e(t,{to:"/reference/plugin/container.html"},{default:a(()=>[B]),_:1}),E])]),F,Y,s("p",null,[M,e(t,{to:"/guide/configuration.html#config-file"},{default:a(()=>[R]),_:1}),S,e(t,{to:"/reference/config.html#plugin-api"},{default:a(()=>[W]),_:1}),H]),T,s("p",null,[z,e(t,{to:"/advanced/plugin.html"},{default:a(()=>[D]),_:1}),G])],64)}var U=c(d,[["render",J],["__file","plugin.html.vue"]]);export{U as default};
